{"ast":null,"code":"import { ref, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  props: [\"dialog\", \"dialogKey\", \"card\", \"buttonLoader\"],\n  // watch: {\n  //   props: {\n  //     immediate: true,\n  //     handler(newValue) {\n  //       this.handleDialog = newValue.dialog;\n  //       this.loader = newValue.buttonLoader;\n  //       this.cardObject = {\n  //         platform: \"\",\n  //         username: \"\",\n  //         password: \"\",\n  //       };\n  //       if (newValue.card) {\n  //         this.cardObject.platform = newValue.card.platform_name;\n  //         this.cardObject.username = newValue.card.account_name;\n  //         this.cardObject.password = newValue.card.password;\n  //         this.cardObject[\"password_id\"] = newValue.card.password_id;\n  //       }\n  //     },\n  //   },\n  // },\n\n  setup(props, {\n    emit\n  }) {\n    console.log();\n    const handleDialog = ref(false);\n    const router = useRouter();\n    const visible = ref(false);\n    const loader = ref(false);\n    const cardObject = ref({\n      platform: \"\",\n      username: \"\",\n      password: \"\"\n    });\n\n    // paste here below\n    watch([props], ([newValue]) => {\n      // do whatever you want\n      handleDialog.value = newValue.dialog;\n      loader.value = newValue.buttonLoader;\n      cardObject.value = {\n        platform: \"\",\n        username: \"\",\n        password: \"\"\n      };\n      if (newValue.card) {\n        cardObject.value.platform = newValue.card.platform_name;\n        cardObject.value.username = newValue.card.account_name;\n        cardObject.value.password = newValue.card.password;\n        cardObject.value[\"password_id\"] = newValue.card.password_id;\n      }\n    });\n    function closeDialog() {\n      emit(\"close-dialog\", false);\n    }\n    const AddNewAccount = () => {\n      console.log(\"addnewAccount==\");\n      loader.value = true;\n      emit(\"add-new-account\", {\n        cardObj: cardObject.value,\n        key: false,\n        loader: loader.value\n      });\n    };\n    const updateAccount = id => {\n      console.log(\"updateAccount==\");\n      loader.value = true;\n      emit(\"update-account\", {\n        cardId: id,\n        cardObj: cardObject.value,\n        key: false,\n        loader: loader.value\n      });\n    };\n    return {\n      visible,\n      router,\n      cardObject,\n      handleDialog,\n      loader,\n      closeDialog,\n      AddNewAccount,\n      updateAccount\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","useRouter","props","setup","emit","console","log","handleDialog","router","visible","loader","cardObject","platform","username","password","newValue","value","dialog","buttonLoader","card","platform_name","account_name","password_id","closeDialog","AddNewAccount","cardObj","key","updateAccount","id","cardId"],"sources":["/Users/dannyganza/Desktop/InnoTech/Finals/Frontend/src/components/dialog/index-dialog.vue"],"sourcesContent":["<template>\n  <v-row justify=\"center\">\n    <v-dialog v-model=\"handleDialog\" persistent width=\"500\">\n      <v-card>\n        <v-card-title class=\"mt-3\">\n          <span v-if=\"dialogKey == 'add'\" class=\"txt20 ml-6\">Add Account</span>\n          <span v-else-if=\"dialogKey == 'edit'\" class=\"txt20 ml-6\"\n            >Update Account</span\n          >\n        </v-card-title>\n        <v-card-text>\n          <v-container>\n            <v-row>\n              <v-col cols=\"12\">\n                <v-text-field\n                  v-model=\"cardObject.platform\"\n                  label=\"Platform Name*\"\n                  variant=\"solo\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-text-field\n                  v-model=\"cardObject.username\"\n                  label=\"Username*\"\n                  variant=\"solo\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-text-field\n                  v-model=\"cardObject.password\"\n                  label=\"Password*\"\n                  variant=\"solo\"\n                  :type=\"visible ? 'text' : 'password'\"\n                  :append-inner-icon=\"visible ? 'mdi-eye-off' : 'mdi-eye'\"\n                  @click:append-inner=\"visible = !visible\"\n                  required\n                ></v-text-field>\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"deep-orange\"\n            variant=\"text\"\n            @click=\"closeDialog\"\n            class=\"text-capitalize mb-2\"\n          >\n            Close\n          </v-btn>\n          <v-btn\n            v-if=\"dialogKey == 'add'\"\n            color=\"deep-orange\"\n            variant=\"tonal\"\n            :loading=\"loader\"\n            @click=\"AddNewAccount\"\n            class=\"text-capitalize mr-8 mb-2\"\n          >\n            Add\n          </v-btn>\n          <v-btn\n            v-else-if=\"dialogKey == 'edit'\"\n            color=\"deep-orange\"\n            variant=\"tonal\"\n            :loading=\"loader\"\n            @click=\"updateAccount(card.password_id)\"\n            class=\"text-capitalize mr-8 mb-2\"\n          >\n            Update\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-row>\n</template>\n\n\n<script>\nimport { ref, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nexport default {\n  props: [\"dialog\", \"dialogKey\", \"card\", \"buttonLoader\"],\n  // watch: {\n  //   props: {\n  //     immediate: true,\n  //     handler(newValue) {\n  //       this.handleDialog = newValue.dialog;\n  //       this.loader = newValue.buttonLoader;\n  //       this.cardObject = {\n  //         platform: \"\",\n  //         username: \"\",\n  //         password: \"\",\n  //       };\n  //       if (newValue.card) {\n  //         this.cardObject.platform = newValue.card.platform_name;\n  //         this.cardObject.username = newValue.card.account_name;\n  //         this.cardObject.password = newValue.card.password;\n  //         this.cardObject[\"password_id\"] = newValue.card.password_id;\n  //       }\n  //     },\n  //   },\n  // },\n\nsetup(props, { emit }) {\n  console.log()\n  const handleDialog = ref(false);\n  const router = useRouter();\n  const visible = ref(false)\n  const loader = ref(false)\n  const cardObject = ref({\n    platform: \"\",\n    username: \"\",\n    password: \"\",\n  });\n\n  // paste here below\n  watch([props], ([newValue]) => {\n      // do whatever you want\n        handleDialog.value = newValue.dialog;\n        loader.value = newValue.buttonLoader;\n        cardObject.value = {\n          platform: \"\",\n          username: \"\",\n          password: \"\",\n        };\n        if (newValue.card) {\n          cardObject.value.platform = newValue.card.platform_name;\n          cardObject.value.username = newValue.card.account_name;\n          cardObject.value.password = newValue.card.password;\n          cardObject.value[\"password_id\"] = newValue.card.password_id;\n        }\n    });\n\n\n\n    function closeDialog() {\n      emit(\"close-dialog\", false);\n    }\n    const AddNewAccount = () => {\n      console.log(\"addnewAccount==\");\n      loader.value = true;\n      emit(\"add-new-account\", { cardObj: cardObject.value, key: false, loader: loader.value });\n    };\n    const updateAccount = (id) => {\n      console.log(\"updateAccount==\");\n      loader.value = true;\n      emit(\"update-account\", { cardId: id, cardObj: cardObject.value, key: false, loader: loader.value });\n    };\n      return {\n        visible,\n        router,\n        cardObject,\n        handleDialog,\n        loader,\n        closeDialog,\n        AddNewAccount,\n        updateAccount\n      }\n    }\n  }\n\n</script>\n\n<style scoped>\n:deep .v-field__field:focus-within {\n  background-color: #e0e0e0 !important;\n}\n</style>"],"mappings":"AAiFA,SAASA,GAAG,EAAEC,KAAI,QAAS,KAAK;AAChC,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,KAAK,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAE,MAAM,EAAE,cAAc,CAAC;EACtD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEFC,KAAKA,CAACD,KAAK,EAAE;IAAEE;EAAK,CAAC,EAAE;IACrBC,OAAO,CAACC,GAAG,CAAC;IACZ,MAAMC,YAAW,GAAIR,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMS,MAAK,GAAIP,SAAS,CAAC,CAAC;IAC1B,MAAMQ,OAAM,GAAIV,GAAG,CAAC,KAAK;IACzB,MAAMW,MAAK,GAAIX,GAAG,CAAC,KAAK;IACxB,MAAMY,UAAS,GAAIZ,GAAG,CAAC;MACrBa,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;;IAEF;IACAd,KAAK,CAAC,CAACE,KAAK,CAAC,EAAE,CAAC,CAACa,QAAQ,CAAC,KAAK;MAC3B;MACER,YAAY,CAACS,KAAI,GAAID,QAAQ,CAACE,MAAM;MACpCP,MAAM,CAACM,KAAI,GAAID,QAAQ,CAACG,YAAY;MACpCP,UAAU,CAACK,KAAI,GAAI;QACjBJ,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACD,IAAIC,QAAQ,CAACI,IAAI,EAAE;QACjBR,UAAU,CAACK,KAAK,CAACJ,QAAO,GAAIG,QAAQ,CAACI,IAAI,CAACC,aAAa;QACvDT,UAAU,CAACK,KAAK,CAACH,QAAO,GAAIE,QAAQ,CAACI,IAAI,CAACE,YAAY;QACtDV,UAAU,CAACK,KAAK,CAACF,QAAO,GAAIC,QAAQ,CAACI,IAAI,CAACL,QAAQ;QAClDH,UAAU,CAACK,KAAK,CAAC,aAAa,IAAID,QAAQ,CAACI,IAAI,CAACG,WAAW;MAC7D;IACJ,CAAC,CAAC;IAIF,SAASC,WAAWA,CAAA,EAAG;MACrBnB,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC;IAC7B;IACA,MAAMoB,aAAY,GAAIA,CAAA,KAAM;MAC1BnB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BI,MAAM,CAACM,KAAI,GAAI,IAAI;MACnBZ,IAAI,CAAC,iBAAiB,EAAE;QAAEqB,OAAO,EAAEd,UAAU,CAACK,KAAK;QAAEU,GAAG,EAAE,KAAK;QAAEhB,MAAM,EAAEA,MAAM,CAACM;MAAM,CAAC,CAAC;IAC1F,CAAC;IACD,MAAMW,aAAY,GAAKC,EAAE,IAAK;MAC5BvB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BI,MAAM,CAACM,KAAI,GAAI,IAAI;MACnBZ,IAAI,CAAC,gBAAgB,EAAE;QAAEyB,MAAM,EAAED,EAAE;QAAEH,OAAO,EAAEd,UAAU,CAACK,KAAK;QAAEU,GAAG,EAAE,KAAK;QAAEhB,MAAM,EAAEA,MAAM,CAACM;MAAM,CAAC,CAAC;IACrG,CAAC;IACC,OAAO;MACLP,OAAO;MACPD,MAAM;MACNG,UAAU;MACVJ,YAAY;MACZG,MAAM;MACNa,WAAW;MACXC,aAAa;MACbG;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}