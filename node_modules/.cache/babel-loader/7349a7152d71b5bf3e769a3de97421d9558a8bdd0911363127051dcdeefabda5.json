{"ast":null,"code":"import { ref } from \"vue\";\nimport Dialog from \"@/src/components/dialog/index-dialog.vue\";\nimport axios from \"axios\";\nimport DeleteAccount from \"../delete-card.vue\";\nimport google from \"@/assets/images/google.png\";\nimport useToast from \"@/plugins/useToast.js\";\nexport default {\n  components: {\n    Dialog,\n    DeleteAccount\n  },\n  props: [\"card\"],\n  setup(props, {\n    emit\n  }) {\n    const dialog = ref(false);\n    const deleteRowDialog = ref(false);\n    const edit = ref(\"edit\");\n    const buttonLoader = ref(false);\n    const password = ref({\n      model: \"\",\n      type: \"password\",\n      visible: false\n    });\n    function deleteAccount(object) {\n      console.log('delete payload id >>>', object.cardId);\n      const token = JSON.parse(localStorage.getItem('token'));\n      const appBaseURL = import.meta.env.VITE_API_URL;\n      let config = {\n        method: 'delete',\n        maxBodyLength: Infinity,\n        url: `${appBaseURL}delete_password/?password_id=${object.cardId}`,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      };\n      axios.request(config).then(res => {\n        if (res.data.message == 'Password entry deleted successfully') {\n          // update cards array after deletion\n          emit(\"delete-card\", object.cardId);\n        } else {\n          console.log(res);\n          useToast(res.data.message, \"error\");\n        }\n      }).catch(err => {\n        // show error message\n        useToast(err.message, \"error\");\n      }).finally(() => {\n        deleteRowDialog.value = object.key;\n        buttonLoader.value = false;\n      });\n    }\n    function updateAccount(payload) {\n      console.log('get update payload >>>', payload.cardObj);\n      let data = JSON.stringify(payload.cardObj);\n      const token = JSON.parse(localStorage.getItem('token'));\n      const appBaseURL = import.meta.env.VITE_API_URL;\n      let config = {\n        method: 'put',\n        maxBodyLength: Infinity,\n        url: `${appBaseURL}update_password/?password_id=${payload.cardId}`,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        data: data\n      };\n      axios.request(config).then(response => {\n        console.log(JSON.stringify(response.data));\n        if (response.data.message == 'Password entry updated successfully') {\n          emit(\"update-card\", payload);\n        } else {\n          console.log(response);\n          useToast(response.data.message, \"error\");\n        }\n      }).catch(error => {\n        console.log(error);\n        useToast(error.message, \"error\");\n      }).finally(() => {\n        dialog.value = payload.key;\n        buttonLoader.value = false;\n      });\n    }\n    return {\n      dialog,\n      buttonLoader,\n      deleteRowDialog,\n      edit,\n      password,\n      google,\n      deleteAccount,\n      updateAccount\n    };\n  }\n};","map":{"version":3,"names":["ref","Dialog","axios","DeleteAccount","google","useToast","components","props","setup","emit","dialog","deleteRowDialog","edit","buttonLoader","password","model","type","visible","deleteAccount","object","console","log","cardId","token","JSON","parse","localStorage","getItem","appBaseURL","import","meta","env","VITE_API_URL","config","method","maxBodyLength","Infinity","url","headers","request","then","res","data","message","catch","err","finally","value","key","updateAccount","payload","cardObj","stringify","response","error"],"sources":["/Users/dannyganza/Desktop/InnoTech/final/Danny-Password/danny-passwords/src/components/cards/index-card.vue"],"sourcesContent":["<template>\n  <Dialog\n    :dialog=\"dialog\"\n    :card=\"card\"\n    :dialogKey=\"edit\"\n    :buttonLoader=\"buttonLoader\"\n    @close-dialog=\"dialog = false\"\n    @update-account=\"updateAccount\"\n  />\n  <DeleteAccount\n    :dialog=\"deleteRowDialog\"\n    :card=\"card\"\n    :buttonLoader=\"buttonLoader\"\n    @close-delete-popup=\"deleteRowDialog = false\"\n    @handle-delete=\"deleteAccount\"\n  />\n  \n  <!-- For Desktop Web Screen -->\n  <div v-if=\"$vuetify.display.mdAndUp\" class=\"w-100\">\n    <v-card style=\"width: 90%\" height=\"70\" class=\"mx-auto my-3\">\n      <div class=\"d-flex align-center pt-2 px-5\">\n        <span class=\"icon-chip\">\n          <img :src=\"google\" alt=\"\" style=\"height: 100%\" />\n        </span>\n        <div class=\"mx-10 font-weight-bold\" style=\"width: 80px\">\n          {{ card.platform_name }}\n        </div>\n        <div class=\"mx-10\" style=\"width: 170px\">{{ card.account_name }}</div>\n        <v-text-field\n          hide-details\n          flat\n          readonly\n          :value=\"card.password\"\n          :type=\"password.visible ? 'text' : password.type\"\n          :append-inner-icon=\"password.visible ? 'mdi-eye-off' : 'mdi-eye'\"\n          @click:append-inner=\"password.visible = !password.visible\"\n          variant=\"solo\"\n        />\n        <v-icon\n          icon=\"mdi-pencil\"\n          color=\"grey-darken-1\"\n          class=\"ml-1 mr-3 cursor-pointer\"\n          @click=\"dialog = true\"\n        ></v-icon>\n        <v-icon\n          icon=\"mdi-delete\"\n          color=\"red\"\n          class=\"cursor-pointer\"\n          @click=\"deleteRowDialog = true\"\n          outlined\n        ></v-icon>\n      </div>\n    </v-card>\n  </div>\n\n  <!-- For Tablet and Mobile Screen -->\n  <div v-else class=\"w-100 px-10\">\n    <v-card class=\"mx-auto my-3\">\n      <div class=\"d-flex justify-space-between\">\n        <div class=\"d-flex\">\n          <span class=\"icon-chip mt-7 mx-4\">\n            <img :src=\"google\" alt=\"\" style=\"height: 100%\" />\n          </span>\n          <div class=\"pt-3\" :class=\"$vuetify.display.sm ? 'ml-2' : ''\">\n            <div class=\"font-weight-bold\">{{ card.platform_name }}</div>\n            <div class=\"\">{{ card.account_name }}</div>\n            <v-text-field\n              hide-details\n              flat\n              readonly\n              :value=\"card.password\"\n              :type=\"password.visible ? 'text' : password.type\"\n              :append-inner-icon=\"password.visible ? 'mdi-eye-off' : 'mdi-eye'\"\n              @click:append-inner=\"password.visible = !password.visible\"\n              variant=\"solo\"\n            />\n          </div>\n        </div>\n        <div class=\"d-flex\" :class=\"$vuetify.display.smAndUp ? 'mt-11' : 'mt-3'\">\n          <v-icon\n            icon=\"mdi-pencil\"\n            color=\"grey-darken-1\"\n            class=\"cursor-pointer\"\n            :class=\"$vuetify.display.smAndUp ? 'mr-3' : 'mr-1'\"\n            @click=\"dialog = true\"\n          ></v-icon>\n          <v-icon\n            icon=\"mdi-delete\"\n            color=\"red\"\n            class=\"mr-4 cursor-pointer\"\n            @click=\"deleteRowDialog = true\"\n            outlined\n          ></v-icon>\n        </div>\n      </div>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport Dialog from \"@/src/components/dialog/index-dialog.vue\";\nimport axios from \"axios\";\nimport DeleteAccount from \"../delete-card.vue\";\nimport google from \"@/assets/images/google.png\";\nimport useToast from \"@/plugins/useToast.js\";\n\nexport default {\n  components: {\n    Dialog,\n    DeleteAccount,\n  },\n  props: [\"card\"],\n  setup(props, { emit }) {\n    const dialog = ref(false);\n    const deleteRowDialog = ref(false);\n    const edit = ref(\"edit\");\n    const buttonLoader = ref(false)\n    const password = ref({\n      model: \"\",\n      type: \"password\",\n      visible: false,\n    });\n    function deleteAccount(object) {\n      console.log('delete payload id >>>', object.cardId)\n\n      const token = JSON.parse(localStorage.getItem('token'))\n      const appBaseURL = import.meta.env.VITE_API_URL\n\n        let config = {\n          method: 'delete',\n          maxBodyLength: Infinity,\n          url: `${appBaseURL}delete_password/?password_id=${object.cardId}`,\n          headers: { \n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n\n          }\n        };\n\n        axios.request(config)\n        .then((res) => {\n          if(res.data.message == 'Password entry deleted successfully')\n          {\n            // update cards array after deletion\n            emit(\"delete-card\", object.cardId);\n          }\n          else {\n            console.log(res);\n            useToast(res.data.message, \"error\");\n          }\n        })\n        .catch((err) => {\n          // show error message\n          useToast(err.message, \"error\");\n        })\n        .finally(() => {\n          deleteRowDialog.value = object.key;\n          buttonLoader.value = false\n        });\n    }\n\n    function updateAccount(payload) {\n      console.log('get update payload >>>', payload.cardObj)\n      let data = JSON.stringify(payload.cardObj);\n      const token = JSON.parse(localStorage.getItem('token'))\n      const appBaseURL = import.meta.env.VITE_API_URL\n\n        let config = {\n          method: 'put',\n          maxBodyLength: Infinity,\n          url: `${appBaseURL}update_password/?password_id=${payload.cardId}`,\n          headers: { \n            'Content-Type': 'application/json', \n            'Authorization': `Bearer ${token}`,\n          },\n          data : data\n        };\n\n        axios.request(config)\n        .then((response) => {\n          console.log(JSON.stringify(response.data));\n          if(response.data.message == 'Password entry updated successfully')\n          {\n            emit(\"update-card\", payload)\n          }\n          else {\n            console.log(response);\n            useToast(response.data.message, \"error\");\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          useToast(error.message, \"error\");\n        })\n        .finally(() => {\n          dialog.value = payload.key;\n          buttonLoader.value = false\n      });\n\n    }\n    return {\n      dialog,\n      buttonLoader,\n      deleteRowDialog,\n      edit,\n      password,\n      google,\n      deleteAccount,\n      updateAccount,\n    };\n  },\n};\n</script>\n\n<style scoped>\n@media screen and (min-width: 959px) {\n  :deep .v-input__control {\n    width: 300px;\n  }\n}\n/* :deep .v-field__input {\n  color: orangered;\n} */\n\n@media screen and (max-width: 959px) {\n  :deep .v-field__input {\n    padding-inline-start: 0;\n    padding-inline-end: 0;\n    padding-top: 0;\n    height: 40px;\n  }\n  :deep .v-input__control {\n    width: 200px;\n  }\n  :deep .v-field__append-inner {\n    align-items: unset;\n    padding-top: 10px;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}