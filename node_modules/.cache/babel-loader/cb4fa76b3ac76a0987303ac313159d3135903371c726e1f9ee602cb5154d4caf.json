{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport rules from \"@/constants/validation-rules.js\";\nimport axios from \"axios\";\nimport { useRoute } from \"vue-router\";\nimport { useRouter } from \"vue-router\";\nimport useToast from '@/plugins/useToast.js';\nexport default {\n  setup() {\n    const loader = ref(false);\n    const myForm = ref('');\n    const route = useRoute();\n    const router = useRouter();\n    const inputList = ref([{\n      name: \"email\",\n      label: \"Email\",\n      placeholder: \"Enter your email here\",\n      type: \"email\",\n      class: \"\",\n      cols: 12,\n      col_md: 12,\n      model: \"\",\n      rules: [rules.emailRequired, rules.email]\n    }, {\n      name: \"password\",\n      label: \"Password\",\n      placeholder: \"Enter your password here\",\n      type: \"password\",\n      class: \"mt-3\",\n      cols: 12,\n      col_md: 12,\n      visible: false,\n      model: \"\",\n      rules: [rules.passwordRequired, rules.password_length, rules.password_max_length]\n    }]);\n    const loginRequest = () => {\n      // check validations\n      if (!inputList.value[0].model) {\n        useToast(\"Email is required\", \"error\");\n        return;\n      }\n      if (!inputList.value[1].model) {\n        useToast(\"Password is required\", \"error\");\n        return;\n      }\n      // button loader is ON\n      loader.value = true;\n      const payload = {\n        email: inputList.value[0].model,\n        password: inputList.value[1].model\n      };\n      console.log('ready login payload ==============', payload);\n      const appBaseURL = import.meta.env.VITE_API_URL;\n      let config = {\n        method: 'post',\n        maxBodyLength: Infinity,\n        url: `${appBaseURL}login`,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: payload\n      };\n      axios.request(config).then(response => {\n        if (response.data.message == 'Login successful') {\n          // set TOKEN localinto  storage \n          localStorage.setItem('token', JSON.stringify(response.data.token));\n          // show success message in the snackbar\n          useToast(response.data.message, \"success\");\n          // route to dashboard page\n          router.push({\n            path: \"/dashboard\"\n          });\n        } else {\n          console.log(response);\n          useToast(response.data.message, \"error\");\n        }\n      }).catch(error => {\n        // show error message in the snackbar\n        useToast(error.message, \"error\");\n      }).finally(() => {\n        loader.value = false;\n      });\n    };\n    return {\n      loader,\n      myForm,\n      route,\n      router,\n      inputList,\n      loginRequest\n    };\n  }\n};","map":{"version":3,"names":["ref","rules","axios","useRoute","useRouter","useToast","setup","loader","myForm","route","router","inputList","name","label","placeholder","type","class","cols","col_md","model","emailRequired","email","visible","passwordRequired","password_length","password_max_length","loginRequest","value","payload","password","console","log","appBaseURL","import","meta","env","VITE_API_URL","config","method","maxBodyLength","Infinity","url","headers","data","request","then","response","message","localStorage","setItem","JSON","stringify","token","push","path","catch","error","finally"],"sources":["/Users/dannyganza/Desktop/InnoTech/final/Danny-Password/danny-passwords/src/components/login-comp.vue"],"sourcesContent":["<template>\n    <div class=\"main-bg d-flex custom-flex align-center\">\n      <div\n        v-if=\"!$vuetify.display.lg\"\n        class=\"text-white custom-main-heading\"\n        :class=\"!$vuetify.display.lg ? 'mt-10' : ''\"\n      >\n        <h1 class=\"font-avenir\" :class=\"$vuetify.display.sm || $vuetify.display.md ? 'txt36' : 'txt32'\">\n          Password\n          <span class=\"text-deep-orange font-avenir\" :class=\"$vuetify.display.sm || $vuetify.display.md ? 'txt36' : 'txt32'\"> Manager </span>\n        </h1>\n      </div>\n      <v-sheet\n        :width=\"$vuetify.display.lg ? '450' : '340'\"\n        :height=\"$vuetify.display.lg ? '400' : '420'\"\n        class=\"custom-spacing custom-radius px-15 py-12\"\n        :class=\"!$vuetify.display.lg ? 'mt-10' : ''\"\n      >\n        <h2>Login</h2>\n        <div class=\"mt-2 mb-4 txt14\">\n          Enter your credentials to access your account\n        </div>\n        <v-form ref=\"myForm\" fast-fail @submit.prevent>\n          <v-text-field\n            v-model=\"inputList[0].model\"\n            :label=\"inputList[0].label\"\n            :placeholder=\"inputList[0].placeholder\"\n            :rules=\"inputList[0].rules\"\n            :type=\"inputList[0].type\"\n            variant=\"solo\"\n          >\n          </v-text-field>\n          <v-text-field\n            v-model=\"inputList[1].model\"\n            :label=\"inputList[1].label\"\n            :placeholder=\"inputList[1].placeholder\"\n            :rules=\"inputList[1].rules\"\n            :type=\"inputList[1].visible ? 'text' : inputList[1].type\"\n            :append-inner-icon=\"inputList[1].visible ? 'mdi-eye-off' : 'mdi-eye'\"\n            @click:append-inner=\"inputList[1].visible = !inputList[1].visible\"\n            variant=\"solo\"\n          >\n          </v-text-field>\n          <v-btn\n            type=\"submit\"\n            @click=\"loginRequest\"\n            block\n            :loading=\"loader\"\n            color=\"deep-orange\"\n            class=\"mt-2 text-capitalize\"\n            >Login</v-btn\n          >\n        </v-form>\n        <router-link :to=\"'signup'\" class=\"text-decoration-none primary-color\">\n          <div class=\"mt-3 mb-4 txt14 text-center\">\n            Create new account\n          </div>\n        </router-link>\n        <v-btn\n            v-if=\"!$vuetify.display.lg\"\n            @click=\"$router.push({path: '/'})\"\n            block\n            variant=\"outlined\"\n            color=\"deep-orange\"\n            class=\"mt-16 text-capitalize\"\n            >Go to Home</v-btn\n          >\n      </v-sheet>\n      <div class=\"text-white custom-main-title\">\n        <h1 class=\"font-avenir txt60\">\n          Password\n          <span class=\"text-deep-orange font-avenir txt60\"> Manager </span>\n        </h1>\n        <div class=\"txt16 custom-width-title mt-5\">\n          A password manager is a technology that helps internet users create,\n          save, manage and use passwords across different online services. Many\n          online services require a username and password to create an account and\n          gain access to a specific service.\n          <v-btn\n            @click=\"$router.push({path: '/'})\"\n            block\n            variant=\"outlined\"\n            color=\"deep-orange\"\n            class=\"mt-5 text-capitalize\"\n            >Go to Home</v-btn\n          >\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { ref } from \"vue\";\n  import rules from \"@/constants/validation-rules.js\"\n  import axios from \"axios\";\n  import { useRoute } from \"vue-router\"\n  import { useRouter } from \"vue-router\"\n  import useToast from '@/plugins/useToast.js'\n  export default {\n    setup() {\n      const loader = ref(false)\n      const myForm = ref('')\n      const route = useRoute()\n      const router = useRouter()\n      const inputList = ref([\n        {\n          name: \"email\",\n          label: \"Email\",\n          placeholder: \"Enter your email here\",\n          type: \"email\",\n          class: \"\",\n          cols: 12,\n          col_md: 12,\n          model: \"\",\n          rules: [rules.emailRequired, rules.email],\n        },\n        {\n          name: \"password\",\n          label: \"Password\",\n          placeholder: \"Enter your password here\",\n          type: \"password\",\n          class: \"mt-3\",\n          cols: 12,\n          col_md: 12,\n          visible: false,\n          model: \"\",\n          rules: [\n            rules.passwordRequired,\n            rules.password_length,\n            rules.password_max_length,\n          ],\n        },\n      ])\n  \n      const loginRequest = () => {\n        // check validations\n        if(!inputList.value[0].model) {\n          useToast(\"Email is required\", \"error\")\n          return\n        }\n        if(!inputList.value[1].model) {\n          useToast(\"Password is required\", \"error\")\n          return\n        }\n        // button loader is ON\n        loader.value = true\n        \n        const payload = {\n          email: inputList.value[0].model,\n          password: inputList.value[1].model\n        }\n        console.log('ready login payload ==============', payload)\n\n        const appBaseURL = import.meta.env.VITE_API_URL\n\n        let config = {\n          method: 'post',\n          maxBodyLength: Infinity,\n          url: `${appBaseURL}login`,\n          headers: { \n            'Content-Type': 'application/json'\n          },\n          data : payload\n        };\n\n        axios.request(config)\n        .then((response) => {\n          if(response.data.message == 'Login successful')\n            {\n              // set TOKEN localinto  storage \n              localStorage.setItem('token', JSON.stringify(response.data.token))\n              // show success message in the snackbar\n              useToast(response.data.message, \"success\")\n              // route to dashboard page\n              router.push({path: \"/dashboard\"});\n            }\n            else {\n              console.log(response);\n              useToast(response.data.message, \"error\");\n            }\n          })\n        .catch((error) => {\n            // show error message in the snackbar\n            useToast(error.message, \"error\")\n          })\n        .finally(() => {\n            loader.value = false\n          })\n      }\n  \n      return {\n        loader,\n        myForm,\n        route,\n        router,\n        inputList,\n        loginRequest\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  :deep .v-field__field:focus-within {\n    background-color: #e0e0e0 !important;\n  }\n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}