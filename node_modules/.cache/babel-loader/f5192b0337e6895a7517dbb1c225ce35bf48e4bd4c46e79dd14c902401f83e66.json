{"ast":null,"code":"const rules = {\n  required: val => !!val || \"Field is required\",\n  firstNameRequired: val => !!val || \"First name is required\",\n  lastNameRequired: val => !!val || \"Last name is required\",\n  emailRequired: val => !!val || \"Email is required\",\n  passwordRequired: val => !!val || \"Password is required\",\n  select_field_required: v => v.length > 0 || \"Field is required\",\n  password_length: val => val && val.length >= 6 || \"Minimum password length is 6 characters\",\n  password_max_length: val => val && val.length < 15 || \"Maximum password length is 15 characters\",\n  name_max_length: val => val && val.length <= 30 || \"Maximum length is 30 characters\",\n  email: val => {\n    if (val) {\n      return /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,})+$/.test(val) || \"Invalid email format\";\n    }\n    return true;\n  }\n};\nexport default rules;","map":{"version":3,"names":["rules","required","val","firstNameRequired","lastNameRequired","emailRequired","passwordRequired","select_field_required","v","length","password_length","password_max_length","name_max_length","email","test"],"sources":["/Users/dannyganza/Desktop/InnoTech/Finals/Frontend/src/constants/validation-rules.js"],"sourcesContent":["const rules = {\n  required: (val) => !!val || \"Field is required\",\n  firstNameRequired: (val) => !!val || \"First name is required\",\n  lastNameRequired: (val) => !!val || \"Last name is required\",\n  emailRequired: (val) => !!val || \"Email is required\",\n  passwordRequired: (val) => !!val || \"Password is required\",\n  select_field_required: (v) => v.length > 0 || \"Field is required\",\n  password_length: (val) =>\n    (val && val.length >= 6) ||\n    \"Minimum password length is 6 characters\",\n  password_max_length: (val) =>\n    (val && val.length < 15) ||\n    \"Maximum password length is 15 characters\",\n  name_max_length: (val) =>\n    (val && val.length <= 30) ||\n    \"Maximum length is 30 characters\",\n  email: (val) => {\n    if (val) {\n      return /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,})+$/.test(val) || \"Invalid email format\";\n    }\n    return true;\n  },\n};\n\nexport default rules;\n"],"mappings":"AAAA,MAAMA,KAAK,GAAG;EACZC,QAAQ,EAAGC,GAAG,IAAK,CAAC,CAACA,GAAG,IAAI,mBAAmB;EAC/CC,iBAAiB,EAAGD,GAAG,IAAK,CAAC,CAACA,GAAG,IAAI,wBAAwB;EAC7DE,gBAAgB,EAAGF,GAAG,IAAK,CAAC,CAACA,GAAG,IAAI,uBAAuB;EAC3DG,aAAa,EAAGH,GAAG,IAAK,CAAC,CAACA,GAAG,IAAI,mBAAmB;EACpDI,gBAAgB,EAAGJ,GAAG,IAAK,CAAC,CAACA,GAAG,IAAI,sBAAsB;EAC1DK,qBAAqB,EAAGC,CAAC,IAAKA,CAAC,CAACC,MAAM,GAAG,CAAC,IAAI,mBAAmB;EACjEC,eAAe,EAAGR,GAAG,IAClBA,GAAG,IAAIA,GAAG,CAACO,MAAM,IAAI,CAAC,IACvB,yCAAyC;EAC3CE,mBAAmB,EAAGT,GAAG,IACtBA,GAAG,IAAIA,GAAG,CAACO,MAAM,GAAG,EAAE,IACvB,0CAA0C;EAC5CG,eAAe,EAAGV,GAAG,IAClBA,GAAG,IAAIA,GAAG,CAACO,MAAM,IAAI,EAAE,IACxB,iCAAiC;EACnCI,KAAK,EAAGX,GAAG,IAAK;IACd,IAAIA,GAAG,EAAE;MACP,OAAO,4CAA4C,CAACY,IAAI,CAACZ,GAAG,CAAC,IAAI,sBAAsB;IACzF;IACA,OAAO,IAAI;EACb;AACF,CAAC;AAED,eAAeF,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}